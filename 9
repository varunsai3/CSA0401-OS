#include <windows.h>
#include <stdio.h>
#include <conio.h>
#include <tchar.h>
#define BUF_SIZE 256
TCHAR szName[] = TEXT("Local\\MySharedMemory");
TCHAR szMsg[] = TEXT("Hello World from shared memory!");
int _tmain(int argc, TCHAR *argv[]) {
    HANDLE hMapFile;
    LPCTSTR pBuf;
    if(argc != 2) {
        _tprintf(TEXT("Usage: %s [producer|consumer]\n"), argv[0]);
        return 1;
    }
    if(_tcscmp(argv[1], TEXT("producer")) == 0) {
        hMapFile = CreateFileMapping(
                     INVALID_HANDLE_VALUE,    
                     NULL,                    
                     PAGE_READWRITE,         
                     0,                     
                     BUF_SIZE,                
                     szName);                 
        if (hMapFile == NULL) {
            _tprintf(TEXT("Could not create file mapping object (%d).\n"), GetLastError());
            return 1;
        }
        pBuf = (LPTSTR) MapViewOfFile(hMapFile,   
                                      FILE_MAP_ALL_ACCESS, 
                                      0,
                                      0,
                                      BUF_SIZE);
        if (pBuf == NULL) {
            _tprintf(TEXT("Could not map view of file (%d).\n"), GetLastError());
            CloseHandle(hMapFile);
            return 1;
        }
        CopyMemory((PVOID)pBuf, szMsg, (_tcslen(szMsg) * sizeof(TCHAR)));
        _tprintf(TEXT("String \"%s\" written to shared memory.\n"), szMsg);
        getch(); 
        UnmapViewOfFile(pBuf);
        CloseHandle(hMapFile);
    } else if(_tcscmp(argv[1], TEXT("consumer")) == 0) {
        hMapFile = OpenFileMapping(
                    FILE_MAP_ALL_ACCESS,   
                    FALSE,                 
                    szName);               
        if (hMapFile == NULL) {
            _tprintf(TEXT("Could not open file mapping object (%d).\n"), GetLastError());
            return 1;
        }
        pBuf = (LPTSTR) MapViewOfFile(hMapFile, 
                                      FILE_MAP_ALL_ACCESS,  
                                      0,
                                      0,
                                      BUF_SIZE);
        if (pBuf == NULL) {
            _tprintf(TEXT("Could not map view of file (%d).\n"), GetLastError());
            CloseHandle(hMapFile);
            return 1;
        }
        _tprintf(TEXT("String read from shared memory: %s\n"), pBuf);
        UnmapViewOfFile(pBuf);
        CloseHandle(hMapFile);
    } else {
        _tprintf(TEXT("Invalid mode. Use 'producer' or 'consumer'.\n"));
        return 1;
    }
    return 0;
}
